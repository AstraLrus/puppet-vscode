---
sudo: false
language: cpp

# Must be Trusty!
# For some reason Xenial fails with exit code 1
dist: trusty

os:
  - linux
  - osx

matrix:
  fast_finish: true

env:
  global:
    VSCODE_BUILD_VERBOSE: true
  matrix:
    # Extension testing

    # Package it up to a VSIX
    - nodejs_version: "8.11.3"
      nodejs_arch: "x64"
      VSCE_TASK: package

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: false
      addons:
        apt:
          sources:
            - sourceline: "deb [arch=amd64] https://packages.microsoft.com/ubuntu/14.04/prod trusty main"
              key_url: "https://packages.microsoft.com/keys/microsoft.asc"
          packages:
            - powershell
    - os: osx
      osx_image: xcode9.1
      before_install:
        - brew tap caskroom/cask
        - brew cask install powershell
  fast_finish: true


before_install: true

install:
  - "export BUILD_VERSION=0.7.0-travis.$TRAVIS_BUILD_NUMBER"
  # Install PDK for Ubuntu 14.04 (Trusty)
  - if [ $TRAVIS_OS_NAME == "linux" ]; then
      wget https://apt.puppetlabs.com/puppet6-release-trusty.deb;
      sudo dpkg -i puppet6-release-trusty.deb;
      sudo apt-get update;
      sudo apt-get install pdk;
      pdk --version;
    fi
  # Install PDK for Mac (Disable homebrew auto-update)
  # Uses an absolute path due to shell needing to be reloaded.
  - if [ $TRAVIS_OS_NAME == "osx" ]; then
      export HOMEBREW_NO_AUTO_UPDATE=1;
      brew cask install puppetlabs/puppet/pdk;
      /opt/puppetlabs/pdk/bin/pdk --version;
    fi
  - if [ "$nodejs_version" != "" ]; then
      git clone --depth 1 https://github.com/creationix/nvm.git ./.nvm;
      source ./.nvm/nvm.sh;
      nvm install $nodejs_version;
      nvm use $nodejs_version;
      npm install -g gulp;
      if [ $TRAVIS_OS_NAME == "linux" ]; then
        export CXX="g++-4.9" CC="gcc-4.9" DISPLAY=:99.0;
        sh -e /etc/init.d/xvfb start;
        sleep 3;
      fi;
      node --version;
      npm install -g npm@4 --silent;
      npm --version;
      npm install -g vsce --silent;
      npm install --silent;
      # node node_modules/gulp/bin/gulp.js bump --version $BUILD_VERSION;
      pwsh -command invoke-psake -taskList 'initial';
    fi

script:
  - npm test --silent
  - if [ "$VSCE_TASK" != "" ]; then
      vsce $VSCE_TASK;
    fi
