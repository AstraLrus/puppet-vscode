version: 99.99.0-appv.{build}
clone_depth: 10
init:
- SET

environment:
  matrix:
  # Extension testing
  # Package it up to a VSIX
  - nodejs_version: "8.11.3"
    nodejs_arch: "x64"
    VSCE_TASK: package

matrix:
  fast_finish: true

install:
- ps: |
     if ($ENV:nodejs_version -ne $null) {
       Install-Product node $env:nodejs_version $env:nodejs_arch

       Write-Host "Node Version..."
       & node --version

       Write-Host "Updating npm..."
       & npm install -g npm@4 --silent

       Write-Host "npm Version..."
       & npm --version

       Write-Host "Installing VSCE globally..."
       & npm install -g vsce --silent

       Write-Host "Installing modules..."
       & npm install --silent

       Write-Host "Set the package.json version..."
       invoke-psake -properties @{ packageVersion = $ENV:APPVEYOR_BUILD_VERSION } -tasklist bump

       Install-Module -Name psake -Force

       Write-Host "Setting up initial configuration..."
       invoke-psake -taskList 'initial'
     }
- cmd: choco install pdk
- ps: pdk --version

build_script:
- cmd: npm test --silent
- ps: if($env:GULP_BUILD_TASK) { invoke-psake -taskList $env:GULP_BUILD_TASK }
- cmd: IF NOT [%VSCE_TASK%] == [] vsce %VSCE_TASK%

test_script:
- cmd: IF NOT [%NPM_TASK%] == [] npm run %NPM_TASK%
- ps: if($env:GULP_BUILD_TASK) { invoke-psake -taskList $env:GULP_BUILD_TASK }

artifacts:
- path: .\*.vsix
